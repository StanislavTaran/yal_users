{"version":3,"sources":["components/MonthItem/MonthItem.module.css","components/UserItem/UserItem.module.css","components/ErrorNotification/ErrorNotification.module.css","styles/transitions/fade.module.css","components/UserList/UserList.module.css","components/MonthList/MonthList.module.css","redux/users/users.actions.js","utils/countBDInMonth.js","redux/users/users.reducer.js","redux/app/app.reducer.js","redux/store.js","components/UserItem/UserItem.js","components/UserList/UserList.js","components/MonthItem/MonthItem.js","components/MonthList/MonthList.js","redux/users/users.selectors.js","components/MonthList/MonthsList.container.js","api/users-api.js","views/UsersInfoPage.js","redux/users/users.operations.js","components/ErrorNotification/ErrorNotification.js","components/App/App.js","redux/app/app.selectors.js","components/App/App.container.js","index.js"],"names":["module","exports","getUsersRequest","createAction","getUsersSucces","getUsersError","countBD","persistedMonths","users","reduce","acc","user","formatedDate","Date","dob","getMonth","push","formatedDayOfBD","Intl","DateTimeFormat","format","errors","createReducer","state","action","payload","monthsInitialState","monthsWithUsers","countBDInMonth","combineReducers","isLoading","usersActions","rootReducer","app","AppReducer","UsersReducer","middlewares","ReduxThunk","store","configureStore","reducer","middleware","devTools","UserItem","name","surname","dateOfBD","className","styles","item","title","nameField","UserList","list","map","key","id","firstName","lastName","MonthItem","stylesItem","month","numberUsers","useState","isShowUsers","setUsersShowFlag","slice","itemSecondLevel","itemThirdLevel","itemFourthLevel","itemFirstLevel","onMouseEnter","onMouseLeave","CSSTransition","in","timeout","classNames","fadeTransition","unmountOnExit","MonthsList","months","monthsList","length","getMonthsWithUsers","getErrors","connect","usersSelectors","MonthList","axios","get","dispatch","getUsersInfo","USERS_API","then","res","data","catch","err","useEffect","ErrorNotification","message","errorBlock","errorText","App","error","style","textAlign","getIsLoadingStatus","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf2a3176.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemFirstLevel\":\"MonthItem_itemFirstLevel__3IlT6\",\"itemSecondLevel\":\"MonthItem_itemSecondLevel__3Ckur MonthItem_itemFirstLevel__3IlT6\",\"itemThirdLevel\":\"MonthItem_itemThirdLevel__2uPlm MonthItem_itemFirstLevel__3IlT6\",\"itemFourthLevel\":\"MonthItem_itemFourthLevel__2ytgT MonthItem_itemFirstLevel__3IlT6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"UserItem_item__jkmu9\",\"nameField\":\"UserItem_nameField__3HW1f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBlock\":\"ErrorNotification_errorBlock__2ESKR\",\"errorText\":\"ErrorNotification_errorText__7G-59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__3CXjT\",\"enterActive\":\"fade_enterActive__2Ahao\",\"exit\":\"fade_exit__PbwYe\",\"exitActive\":\"fade_exitActive__Ibs-D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"UserList_list__3I4G6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monthsList\":\"MonthList_monthsList__37r3w\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const getUsersRequest = createAction('users/GET_USERS_REQUEST');\nexport const getUsersSucces = createAction('users/GET_USERS_SUCCES');\nexport const getUsersError = createAction('users/GET_USERS_ERROR');\n","const countBD = (persistedMonths, users) => {\n  return users.reduce((acc, user) => {\n    const formatedDate = new Date(user.dob);\n    const month = formatedDate.getMonth();\n\n    acc[month].push({ ...user, formatedDayOfBD: new Intl.DateTimeFormat().format(formatedDate) });\n    return acc;\n  }, persistedMonths);\n};\n\nexport default countBD;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { getUsersSucces, getUsersError, getUsersRequest } from './users.actions';\nimport countBDInMonth from '../../utils/countBDInMonth';\n\nconst errors = createReducer(null, {\n  [getUsersError]: (state, action) => action.payload,\n  [getUsersSucces]: () => null,\n  [getUsersRequest]: () => null,\n});\n\nconst monthsInitialState = [\n  ['Январь'],\n  ['Февраль'],\n  ['Март'],\n  ['Апрель'],\n  ['Май'],\n  ['Июнь'],\n  ['Июль'],\n  ['Август'],\n  ['Сентябрь'],\n  ['Октябрь'],\n  ['Ноябрь'],\n  ['Декабрь'],\n];\n\nconst monthsWithUsers = createReducer([], {\n  [getUsersSucces]: (state, action) => {\n    const countedMonths = countBDInMonth(monthsInitialState, action.payload);\n    return countedMonths;\n  },\n});\n\nconst users = combineReducers({ monthsWithUsers, errors });\n\nexport default users;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport * as usersActions from '../users/users.actions';\n\nconst isLoading = createReducer(false, {\n  [usersActions.getUsersRequest]: () => true,\n  [usersActions.getUsersSucces]: () => false,\n  [usersActions.getUsersError]: () => false,\n});\n\nexport default combineReducers({ isLoading });\n","import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport UsersReducer from './users/users.reducer';\nimport AppReducer from './app/app.reducer';\n\nconst rootReducer = combineReducers({ app: AppReducer, users: UsersReducer });\n\nconst middlewares = [ReduxThunk];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: middlewares,\n  devTools: true,\n});\n\nexport default store;\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './UserItem.module.css';\n\nconst UserItem = ({ name, surname, dateOfBD }) => {\n  return (\n    <li className={styles.item} title={`${name} : ${dateOfBD}`}>\n      <span className={styles.nameField}>\n        {name} {surname}\n      </span>\n    </li>\n  );\n};\n\nUserItem.propTypes = {\n  name: propTypes.string.isRequired,\n  surname: propTypes.string.isRequired,\n  dateOfBD: propTypes.string.isRequired,\n};\n\nexport default UserItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport UserItem from '../UserItem/UserItem';\nimport styles from './UserList.module.css';\n\nconst UserList = ({ users }) => {\n  return (\n    <ol className={styles.list}>\n      {users.map(user => (\n        <UserItem\n          key={user.id}\n          dateOfBD={user.formatedDayOfBD}\n          name={user.firstName}\n          surname={user.lastName}\n        />\n      ))}\n    </ol>\n  );\n};\n\nUserList.propTypes = {\n  users: propTypes.arrayOf(\n    propTypes.shape({\n      firstName: propTypes.string.isRequired,\n      lastName: propTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default UserList;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport fadeTransition from '../../styles/transitions/fade.module.css';\nimport UserList from '../UserList/UserList';\nimport styles from './MonthItem.module.css';\n\nconst MonthItem = ({ month, numberUsers }) => {\n  const [isShowUsers, setUsersShowFlag] = useState(false);\n\n  const users = month.slice(1);\n\n  let stylesItem;\n  switch (true) {\n    case numberUsers < 7 && numberUsers > 2:\n      stylesItem = styles.itemSecondLevel;\n      break;\n\n    case numberUsers < 11 && numberUsers > 6:\n      stylesItem = styles.itemThirdLevel;\n      break;\n\n    case numberUsers >= 11:\n      stylesItem = styles.itemFourthLevel;\n      break;\n\n    default:\n      stylesItem = styles.itemFirstLevel;\n  }\n  return (\n    <li\n      className={stylesItem}\n      onMouseEnter={() => setUsersShowFlag(true)}\n      onMouseLeave={() => setUsersShowFlag(false)}\n    >\n      {month[0]}\n      <CSSTransition in={isShowUsers} timeout={200} classNames={fadeTransition} unmountOnExit>\n        <UserList users={users} />\n      </CSSTransition>\n    </li>\n  );\n};\n\nMonthItem.propTypes = {\n  month: propTypes.arrayOf(propTypes.any).isRequired,\n  numberUsers: propTypes.number.isRequired,\n};\n\nexport default MonthItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport MonthItem from '../MonthItem/MonthItem';\nimport styles from './MonthList.module.css';\n\nconst MonthsList = ({ months }) => {\n  return (\n    <ul className={styles.monthsList}>\n      {months.map(month => (\n        <MonthItem key={month[0]} month={month} numberUsers={month.length - 1} />\n      ))}\n    </ul>\n  );\n};\n\nMonthsList.propTypes = {\n  months: propTypes.arrayOf(propTypes.array).isRequired,\n};\n\nexport default MonthsList;\n","export const getMonthsWithUsers = state => state.users.monthsWithUsers;\nexport const getErrors = state => state.users.errors;\n","import { connect } from 'react-redux';\nimport MonthList from './MonthList';\nimport * as usersSelectors from '../../redux/users/users.selectors';\n\nconst mapStateToProps = state => ({\n  months: usersSelectors.getMonthsWithUsers(state),\n});\n\nexport default connect(mapStateToProps)(MonthList);\n","import axios from 'axios';\n\nconst API_URI = 'https://yalantis-react-school-api.yalantis.com/api/task0/users';\n\nconst fetchUsers = () => axios.get(API_URI);\n\nexport default { fetchUsers };\n","/* eslint-disable react/destructuring-assignment */\nimport React, { useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport MonthsList from '../components/MonthList/MonthsList.container';\nimport * as userOperations from '../redux/users/users.operations';\n\nconst UsersInfoPage = ({ getUsersInfo }) => {\n  useEffect(() => {\n    getUsersInfo();\n  }, [getUsersInfo]);\n\n  return (\n    <section>\n      <MonthsList />\n    </section>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { getUsersInfo: () => dispatch(userOperations.getUsersInfo()) };\n};\n\nUsersInfoPage.propTypes = {\n  getUsersInfo: propTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(UsersInfoPage);\n","/* eslint-disable import/prefer-default-export */\nimport { getUsersRequest, getUsersSucces, getUsersError } from './users.actions';\nimport USERS_API from '../../api/users-api';\n\nexport const getUsersInfo = () => dispatch => {\n  dispatch(getUsersRequest());\n\n  USERS_API.fetchUsers()\n    .then(res => {\n      dispatch(getUsersSucces(res.data));\n    })\n    .catch(err => {\n      dispatch(getUsersError(err));\n    });\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './ErrorNotification.module.css';\n\nconst ErrorNotification = ({ message }) => (\n  <div className={styles.errorBlock}>\n    <p className={styles.errorText}>{message}</p>\n  </div>\n);\n\nErrorNotification.propTypes = {\n  message: propTypes.string.isRequired,\n};\n\nexport default ErrorNotification;\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nimport UsersInfoPage from '../../views/UsersInfoPage';\nimport ErrorNotification from '../ErrorNotification/ErrorNotification';\n\nfunction App({ error, isLoading }) {\n  return (\n    <div className=\"App\">\n      {!isLoading && error && <ErrorNotification message={error.message} />}\n      {isLoading && <div style={{ textAlign: 'center' }}>LOADING...</div>}\n      <UsersInfoPage />\n    </div>\n  );\n}\n\nApp.propTypes = {\n  error: propTypes.shape({ message: propTypes.string.isRequired }).isRequired,\n  isLoading: propTypes.bool.isRequired,\n};\n\nexport default App;\n","/* eslint-disable import/prefer-default-export */\nexport const getIsLoadingStatus = state => state.app.isLoading;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { getIsLoadingStatus } from '../../redux/app/app.selectors';\nimport { getErrors } from '../../redux/users/users.selectors';\n\nconst mapStateToProps = state => ({\n  error: getErrors(state),\n  isLoading: getIsLoadingStatus(state),\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './styles/variables.css';\nimport './styles/index.css';\nimport App from './components/App/App.container';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}